module test.nm64.nm64_gen01;

import std.stdio;
import std.string;
import std.exception;
import xbyak;
import test.test_count;

version (X86) version = XBYAK32;
version (X86_64) version = XBYAK64;

version (XBYAK64)
{

    @("nm64_gen01")
    unittest
    {
        class gen01 : CodeGenerator
        {
            TestCount testCount;

            void sdump(string hexStr, string file = __FILE__, size_t line = __LINE__)
            {
                if (hexStr.length == 0)
                {
                    dump();
                    size_ = 0;
                    return;
                }

                const size_t n = this.getSize();
                auto ctbl = this.getCode();

                string hexCode;
                for (size_t i = 0; i < n; i++)
                {
                    hexCode ~= format("%02X", ctbl[i]);
                }

                testCount.TEST_EQUAL(hexCode, hexStr, file, line);
                size_ = 0;
                return;
            }

            ~this()
            {
                testCount.end("nm64_gen01");
            }

            this()
            {
                testCount.reset();

                push(12345678);
                sdump("684E61BC00");
                push(4);
                sdump("6A04");
                push(word, 1000);
                sdump("6668E803");
                push(bp);
                sdump("6655");
                push(ax);
                sdump("6650");
                push(word[esi]);
                sdump("6667FF36");
                push(r15w);
                sdump("664157");
                pop(sp);
                sdump("665C");
                pop(ax);
                sdump("6658");
                pop(word[esi]);
                sdump("66678F06");
                pop(r8w);
                sdump("664158");
                push(12345678);
                sdump("684E61BC00");
                push(rsp);
                sdump("54");
                push(r12);
                sdump("4154");
                push(rax);
                sdump("50");
                push(qword[eax + ecx * 8]);
                sdump("67FF34C8");
                pop(rcx);
                sdump("59");
                pop(r11);
                sdump("415B");
                pop(rax);
                sdump("58");
                pop(qword[eax + ecx * 8]);
                sdump("678F04C8");
                test(ptr[eax + ecx + 3], esi);
                sdump("6785740803");
                test(ptr[eax + ecx + 3], eax);
                sdump("6785440803");
                test(ptr[eax + ecx + 3], r8d);
                sdump("674485440803");
                test(esi, ecx);
                sdump("85CE");
                test(ebx, eax);
                sdump("85C3");
                test(ecx, r15d);
                sdump("4485F9");
                test(eax, esp);
                sdump("85E0");
                test(eax, eax);
                sdump("85C0");
                test(eax, r9d);
                sdump("4485C8");
                test(ptr[rdx + r15 + 0x12], ecx);
                sdump("42854C3A12");
                test(ptr[rdx + r15 + 0x12], eax);
                sdump("4285443A12");
                test(ptr[rdx + r15 + 0x12], r15d);
                sdump("46857C3A12");
                test(r13d, ecx);
                sdump("4185CD");
                test(r10d, eax);
                sdump("4185C2");
                test(r11d, r8d);
                sdump("4585C3");
                test(ptr[eax + ecx + 3], rsi);
                sdump("674885740803");
                test(ptr[eax + ecx + 3], r8);
                sdump("674C85440803");
                test(ptr[eax + ecx + 3], rax);
                sdump("674885440803");
                test(ptr[rdx + r15 + 0x12], rbx);
                sdump("4A855C3A12");
                test(ptr[rdx + r15 + 0x12], r9);
                sdump("4E854C3A12");
                test(ptr[rdx + r15 + 0x12], rax);
                sdump("4A85443A12");
                test(rdi, rdx);
                sdump("4885D7");
                test(rsi, r14);
                sdump("4C85F6");
                test(rdi, rax);
                sdump("4885C7");
                test(r8, rcx);
                sdump("4985C8");
                test(r12, r12);
                sdump("4D85E4");
                test(r9, rax);
                sdump("4985C1");
                test(rax, rsi);
                sdump("4885F0");
                test(rax, r10);
                sdump("4C85D0");
                test(rax, rax);
                sdump("4885C0");
                test(ptr[eax + ecx + 3], cx);
                sdump("6667854C0803");
                test(ptr[eax + ecx + 3], ax);
                sdump("666785440803");
                test(ptr[eax + ecx + 3], r15w);
                sdump("666744857C0803");
                test(cx, di);
                sdump("6685F9");
                test(bx, ax);
                sdump("6685C3");
                test(si, r15w);
                sdump("664485FE");
                test(ax, bx);
                sdump("6685D8");
                test(ax, ax);
                sdump("6685C0");
                test(ax, r11w);
                sdump("664485D8");
                test(ptr[rdx + r15 + 0x12], cx);
                sdump("6642854C3A12");
                test(ptr[rdx + r15 + 0x12], ax);
                sdump("664285443A12");
                test(ptr[rdx + r15 + 0x12], r10w);
                sdump("664685543A12");
                test(r10w, sp);
                sdump("664185E2");
                test(r13w, ax);
                sdump("664185C5");
                test(r12w, r13w);
                sdump("664585EC");
                test(ptr[eax + ecx + 3], cl);
                sdump("67844C0803");
                test(ptr[eax + ecx + 3], al);
                sdump("6784440803");
                test(ptr[eax + ecx + 3], r9b);
                sdump("6744844C0803");
                test(ptr[eax + ecx + 3], sil);
                sdump("674084740803");
                test(bl, cl);
                sdump("84CB");
                test(bl, al);
                sdump("84C3");
                test(cl, r13b);
                sdump("4484E9");
                test(cl, bpl);
                sdump("4084E9");
                test(al, dl);
                sdump("84D0");
                test(al, al);
                sdump("84C0");
                test(al, r13b);
                sdump("4484E8");
                test(al, bpl);
                sdump("4084E8");
                test(ptr[rdx + r15 + 0x12], dl);
                sdump("4284543A12");
                test(ptr[rdx + r15 + 0x12], al);
                sdump("4284443A12");
                test(ptr[rdx + r15 + 0x12], r11b);
                sdump("46845C3A12");
                test(ptr[rdx + r15 + 0x12], bpl);
                sdump("42846C3A12");
                test(r13b, bl);
                sdump("4184DD");
                test(r15b, al);
                sdump("4184C7");
                test(r11b, r12b);
                sdump("4584E3");
                test(r11b, sil);
                sdump("4184F3");
                test(dil, al);
                sdump("4084C7");
                test(spl, al);
                sdump("4084C4");
                test(sil, r8b);
                sdump("4484C6");
                test(dil, bpl);
                sdump("4084EF");
                test(esi, 4);
                sdump("F7C604000000");
                test(esp, 0xda);
                sdump("F7C4DA000000");
                test(eax, 4);
                sdump("A904000000");
                test(eax, 0xda);
                sdump("A9DA000000");
                test(cl, 4);
                sdump("F6C104");
                test(cl, 0xda);
                sdump("F6C1DA");
                test(di, 4);
                sdump("66F7C70400");
                test(cx, 0xda);
                sdump("66F7C1DA00");
                test(ax, 4);
                sdump("66A90400");
                test(ax, 0xda);
                sdump("66A9DA00");
                test(al, 4);
                sdump("A804");
                test(al, 0xda);
                sdump("A8DA");
                test(byte_[eax + edx], 4);
                sdump("67F6041004");
                test(byte_[eax + edx], 0xda);
                sdump("67F60410DA");
                test(word[esi], 4);
                sdump("6667F7060400");
                test(word[esi], 0xda);
                sdump("6667F706DA00");
                test(dword[ebp * 2], 4);
                sdump("67F7442D0004000000");
                test(dword[ebp * 2], 0xda);
                sdump("67F7442D00DA000000");
                test(r15d, 4);
                sdump("41F7C704000000");
                test(r13d, 0xda);
                sdump("41F7C5DA000000");
                test(r14w, 4);
                sdump("6641F7C60400");
                test(r8w, 0xda);
                sdump("6641F7C0DA00");
                test(r9b, 4);
                sdump("41F6C104");
                test(r13b, 0xda);
                sdump("41F6C5DA");
                test(bpl, 4);
                sdump("40F6C504");
                test(sil, 0xda);
                sdump("40F6C6DA");
                test(rsp, 4);
                sdump("48F7C404000000");
                test(rdx, 0xda);
                sdump("48F7C2DA000000");
                test(r14, 4);
                sdump("49F7C604000000");
                test(r15, 0xda);
                sdump("49F7C7DA000000");
                test(rax, 4);
                sdump("48A904000000");
                test(rax, 0xda);
                sdump("48A9DA000000");

                push(12345678);
                sdump("684E61BC00");
                push(4);
                sdump("6A04");
                push(word, 1000);
                sdump("6668E803");
                push(bp);
                sdump("6655");
                push(ax);
                sdump("6650");
                push(word[esi]);
                sdump("6667FF36");
                push(r15w);
                sdump("664157");
                pop(sp);
                sdump("665C");
                pop(ax);
                sdump("6658");
                pop(word[esi]);
                sdump("66678F06");
                pop(r8w);
                sdump("664158");
                push(12345678);
                sdump("684E61BC00");
                push(rsp);
                sdump("54");
                push(r12);
                sdump("4154");
                push(rax);
                sdump("50");
                push(qword[eax + ecx * 8]);
                sdump("67FF34C8");
                pop(rcx);
                sdump("59");
                pop(r11);
                sdump("415B");
                pop(rax);
                sdump("58");
                pop(qword[eax + ecx * 8]);
                sdump("678F04C8");
                test(ptr[eax + ecx + 3], esi);
                sdump("6785740803");
                test(ptr[eax + ecx + 3], eax);
                sdump("6785440803");
                test(ptr[eax + ecx + 3], r8d);
                sdump("674485440803");
                test(esi, ecx);
                sdump("85CE");
                test(ebx, eax);
                sdump("85C3");
                test(ecx, r15d);
                sdump("4485F9");
                test(eax, esp);
                sdump("85E0");
                test(eax, eax);
                sdump("85C0");
                test(eax, r9d);
                sdump("4485C8");
                test(ptr[rdx + r15 + 0x12], ecx);
                sdump("42854C3A12");
                test(ptr[rdx + r15 + 0x12], eax);
                sdump("4285443A12");
                test(ptr[rdx + r15 + 0x12], r15d);
                sdump("46857C3A12");
                test(r13d, ecx);
                sdump("4185CD");
                test(r10d, eax);
                sdump("4185C2");
                test(r11d, r8d);
                sdump("4585C3");
                test(ptr[eax + ecx + 3], rsi);
                sdump("674885740803");
                test(ptr[eax + ecx + 3], r8);
                sdump("674C85440803");
                test(ptr[eax + ecx + 3], rax);
                sdump("674885440803");
                test(ptr[rdx + r15 + 0x12], rbx);
                sdump("4A855C3A12");
                test(ptr[rdx + r15 + 0x12], r9);
                sdump("4E854C3A12");
                test(ptr[rdx + r15 + 0x12], rax);
                sdump("4A85443A12");
                test(rdi, rdx);
                sdump("4885D7");
                test(rsi, r14);
                sdump("4C85F6");
                test(rdi, rax);
                sdump("4885C7");
                test(r8, rcx);
                sdump("4985C8");
                test(r12, r12);
                sdump("4D85E4");
                test(r9, rax);
                sdump("4985C1");
                test(rax, rsi);
                sdump("4885F0");
                test(rax, r10);
                sdump("4C85D0");
                test(rax, rax);
                sdump("4885C0");
                test(ptr[eax + ecx + 3], cx);
                sdump("6667854C0803");
                test(ptr[eax + ecx + 3], ax);
                sdump("666785440803");
                test(ptr[eax + ecx + 3], r15w);
                sdump("666744857C0803");
                test(cx, di);
                sdump("6685F9");
                test(bx, ax);
                sdump("6685C3");
                test(si, r15w);
                sdump("664485FE");
                test(ax, bx);
                sdump("6685D8");
                test(ax, ax);
                sdump("6685C0");
                test(ax, r11w);
                sdump("664485D8");
                test(ptr[rdx + r15 + 0x12], cx);
                sdump("6642854C3A12");
                test(ptr[rdx + r15 + 0x12], ax);
                sdump("664285443A12");
                test(ptr[rdx + r15 + 0x12], r10w);
                sdump("664685543A12");
                test(r10w, sp);
                sdump("664185E2");
                test(r13w, ax);
                sdump("664185C5");
                test(r12w, r13w);
                sdump("664585EC");
                test(ptr[eax + ecx + 3], cl);
                sdump("67844C0803");
                test(ptr[eax + ecx + 3], al);
                sdump("6784440803");
                test(ptr[eax + ecx + 3], r9b);
                sdump("6744844C0803");
                test(ptr[eax + ecx + 3], sil);
                sdump("674084740803");
                test(bl, cl);
                sdump("84CB");
                test(bl, al);
                sdump("84C3");
                test(cl, r13b);
                sdump("4484E9");
                test(cl, bpl);
                sdump("4084E9");
                test(al, dl);
                sdump("84D0");
                test(al, al);
                sdump("84C0");
                test(al, r13b);
                sdump("4484E8");
                test(al, bpl);
                sdump("4084E8");
                test(ptr[rdx + r15 + 0x12], dl);
                sdump("4284543A12");
                test(ptr[rdx + r15 + 0x12], al);
                sdump("4284443A12");
                test(ptr[rdx + r15 + 0x12], r11b);
                sdump("46845C3A12");
                test(ptr[rdx + r15 + 0x12], bpl);
                sdump("42846C3A12");
                test(r13b, bl);
                sdump("4184DD");
                test(r15b, al);
                sdump("4184C7");
                test(r11b, r12b);
                sdump("4584E3");
                test(r11b, sil);
                sdump("4184F3");
                test(dil, al);
                sdump("4084C7");
                test(spl, al);
                sdump("4084C4");
                test(sil, r8b);
                sdump("4484C6");
                test(dil, bpl);
                sdump("4084EF");
                test(esi, 4);
                sdump("F7C604000000");
                test(esp, 0xda);
                sdump("F7C4DA000000");
                test(eax, 4);
                sdump("A904000000");
                test(eax, 0xda);
                sdump("A9DA000000");
                test(cl, 4);
                sdump("F6C104");
                test(cl, 0xda);
                sdump("F6C1DA");
                test(di, 4);
                sdump("66F7C70400");
                test(cx, 0xda);
                sdump("66F7C1DA00");
                test(ax, 4);
                sdump("66A90400");
                test(ax, 0xda);
                sdump("66A9DA00");
                test(al, 4);
                sdump("A804");
                test(al, 0xda);
                sdump("A8DA");
                test(byte_[eax + edx], 4);
                sdump("67F6041004");
                test(byte_[eax + edx], 0xda);
                sdump("67F60410DA");
                test(word[esi], 4);
                sdump("6667F7060400");
                test(word[esi], 0xda);
                sdump("6667F706DA00");
                test(dword[ebp * 2], 4);
                sdump("67F7442D0004000000");
                test(dword[ebp * 2], 0xda);
                sdump("67F7442D00DA000000");
                test(r15d, 4);
                sdump("41F7C704000000");
                test(r13d, 0xda);
                sdump("41F7C5DA000000");
                test(r14w, 4);
                sdump("6641F7C60400");
                test(r8w, 0xda);
                sdump("6641F7C0DA00");
                test(r9b, 4);
                sdump("41F6C104");
                test(r13b, 0xda);
                sdump("41F6C5DA");
                test(bpl, 4);
                sdump("40F6C504");
                test(sil, 0xda);
                sdump("40F6C6DA");
                test(rsp, 4);
                sdump("48F7C404000000");
                test(rdx, 0xda);
                sdump("48F7C2DA000000");
                test(r14, 4);
                sdump("49F7C604000000");
                test(r15, 0xda);
                sdump("49F7C7DA000000");
                test(rax, 4);
                sdump("48A904000000");
                test(rax, 0xda);
                sdump("48A9DA000000");

            }
        }

        scope g1 = new gen01();
    }

}
